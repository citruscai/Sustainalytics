{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{getCookie,deleteCookie,setCookie}from'./authentication';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext({isAuthenticated:false,username:null,logout:()=>{},login:()=>{}});export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[username,setUsername]=useState(null);useEffect(()=>{const username=getCookie('username');if(username){setIsAuthenticated(true);setUsername(username);}},[]);const login=username=>{console.log(username);setCookie(\"username\",username);setIsAuthenticated(true);setUsername(username);};const logout=()=>{deleteCookie('username');setIsAuthenticated(false);setUsername(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,username,logout,login},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","getCookie","deleteCookie","setCookie","jsx","_jsx","AuthContext","isAuthenticated","username","logout","login","AuthProvider","_ref","children","setIsAuthenticated","setUsername","console","log","Provider","value","useAuth"],"sources":["C:/Users/Cairo/codepink/frontend/src/utils/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, PropsWithChildren } from 'react';\r\nimport { getCookie,deleteCookie,setCookie } from './authentication'; \r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  username: string | null;\r\n  logout: () => void; \r\n  login:(username:string)=> void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({ isAuthenticated: false, username: null,logout: () => {},login: () => {}});\r\n\r\n\r\nexport const AuthProvider: React.FC<PropsWithChildren<{}>> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [username, setUsername] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const username = getCookie('username'); \r\n    if (username) {\r\n      setIsAuthenticated(true);\r\n      setUsername(username);\r\n    }\r\n  }, []);\r\n  const login = (username:string) => {\r\n    console.log(username)\r\n    setCookie(\"username\", username);\r\n    setIsAuthenticated(true);\r\n    setUsername(username);\r\n  };\r\n  const logout = () => {\r\n    deleteCookie('username'); \r\n    setIsAuthenticated(false);\r\n    setUsername(null);\r\n};\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, username,logout,login }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAA2B,OAAO,CAChG,OAASC,SAAS,CAACC,YAAY,CAACC,SAAS,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBASpE,KAAM,CAAAC,WAAW,cAAGT,aAAa,CAAkB,CAAEU,eAAe,CAAE,KAAK,CAAEC,QAAQ,CAAE,IAAI,CAACC,MAAM,CAAEA,CAAA,GAAM,CAAC,CAAC,CAACC,KAAK,CAAEA,CAAA,GAAM,CAAC,CAAC,CAAC,CAAC,CAG9H,MAAO,MAAM,CAAAC,YAA6C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxE,KAAM,CAACL,eAAe,CAAEO,kBAAkB,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACS,QAAQ,CAAEO,WAAW,CAAC,CAAGhB,QAAQ,CAAgB,IAAI,CAAC,CAE7DC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAQ,QAAQ,CAAGP,SAAS,CAAC,UAAU,CAAC,CACtC,GAAIO,QAAQ,CAAE,CACZM,kBAAkB,CAAC,IAAI,CAAC,CACxBC,WAAW,CAACP,QAAQ,CAAC,CACvB,CACF,CAAC,CAAE,EAAE,CAAC,CACN,KAAM,CAAAE,KAAK,CAAIF,QAAe,EAAK,CACjCQ,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC,CACrBL,SAAS,CAAC,UAAU,CAAEK,QAAQ,CAAC,CAC/BM,kBAAkB,CAAC,IAAI,CAAC,CACxBC,WAAW,CAACP,QAAQ,CAAC,CACvB,CAAC,CACD,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnBP,YAAY,CAAC,UAAU,CAAC,CACxBY,kBAAkB,CAAC,KAAK,CAAC,CACzBC,WAAW,CAAC,IAAI,CAAC,CACrB,CAAC,CACC,mBACEV,IAAA,CAACC,WAAW,CAACY,QAAQ,EAACC,KAAK,CAAE,CAAEZ,eAAe,CAAEC,QAAQ,CAACC,MAAM,CAACC,KAAM,CAAE,CAAAG,QAAA,CACrEA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAO,OAAO,CAAGA,CAAA,GAAMtB,UAAU,CAACQ,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}